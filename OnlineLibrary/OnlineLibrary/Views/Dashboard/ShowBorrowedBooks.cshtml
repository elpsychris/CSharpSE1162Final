@using OnlineLibrary.Models
@using Microsoft.AspNetCore.Http;
@{
    List<ActivityHistory> list = ViewBag.result;
    Account acc = ViewBag.account;
    string lastSearchValue = Context.Session.GetString("lastSearchValue");
    Layout = "_Default-dashboard";
}
<!-- page content -->
@{
    int i = 1;
    int remainDays = 0;
    string dueDate = "";
    int fineAmount = 2, fineAmountHasToPay = 0, expiredBook = 0, warningBook = 0;
}
<div class="">
    <div class="page-title">
        <div class="title_left">
            <h3>@acc.LastName @acc.FirstName's Borrowing Books</h3>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <ul class="nav navbar-right panel_toolbox" style="color: black;">
                    <h4>Today is: @DateTime.Now.ToString("dd/MM/yyyy")</h4>
                </ul>
                <form asp-action="MarkReturnedBooks">

                    <div class="x_title">
                        <a asp-action="SearchMemberBorrowList" asp-route-MID="@lastSearchValue" class="btn btn-danger">Go back to member borrow list</a>
                        <a asp-action="ShowBorrowedHistory" asp-route-MID="@acc.Id" asp-route-lsv="@lastSearchValue" class="btn btn-primary">View @acc.FirstName's borrow history</a>
                        @if (list.Count != 0)
                        {
                            <button class="btn btn-warning" type="Submit">Update</button>
                        }
                        <div class="clearfix"></div>
                    </div>


                    <div class="x_content">
                        <div class="table-responsive">
                            @if (list.Count != 0)
                            {
                                <table class="table" style="color: black;">
                                    <thead>
                                        <tr>
                                            <th>No.</th>
                                            <th>Book's ID</th>
                                            <th>Book's Name</th>
                                            <th>Borrow Date</th>
                                            <th>Due Date</th>
                                            <th>Remaing Days</th>
                                            <th>Check to mark "returned"</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (ActivityHistory ah in list)
                {
                    remainDays = (int)Math.Ceiling((decimal)ah.BorrowDate.Value.AddDays((double)@ah.B.TitleNavigation.ReturnTypeNavigation.NoOfDay).Subtract(DateTime.Now).TotalDays);
                    dueDate = ah.BorrowDate.Value.AddDays((double)@ah.B.TitleNavigation.ReturnTypeNavigation.NoOfDay).ToString("dd/MM/yyyy");
                                            @if (remainDays < 0)
                    {
                                                <tr style="background-color: #E96152; font-weight: 700;">
                                                    <td>@i</td>
                                                    <td>@ah.B.Id</td>
                                                    <td>@ah.B.TitleNavigation.Name</td>
                                                    <td>@ah.BorrowDate.Value.ToString("dd/MM/yyyy")</td>
                                                    <td>@dueDate</td>
                                                    <td>@remainDays</td>
                                                    <td>
                                                        <input type="checkbox" name="returned" value="@ah.B.Id" />
                                                    </td>
                                                </tr>
                                                fineAmountHasToPay += (fineAmount * Math.Abs(remainDays));
                                                expiredBook++;
                                            }
                                            else if (remainDays <= 5)
                                            {
                                                <tr style="background-color: #F3A72D; font-weight: 700;">
                                                    <td>@i</td>
                                                    <td>@ah.B.Id</td>
                                                    <td>@ah.B.TitleNavigation.Name</td>
                                                    <td>@ah.BorrowDate.Value.ToString("dd/MM/yyyy")</td>
                                                    <td>@dueDate</td>
                                                    <td>@remainDays</td>
                                                    <td>
                                                        <input type="checkbox" name="returned" value="@ah.B.Id" />
                                                    </td>
                                                </tr>
                                                warningBook++;
                                            }
                                            else
                                            {
                                                <tr style="font-weight: 700;">
                                                    <td>@i</td>
                                                    <td>@ah.B.Id</td>
                                                    <td>@ah.B.TitleNavigation.Name</td>
                                                    <td>@ah.BorrowDate.Value.ToString("dd/MM/yyyy")</td>
                                                    <td>@dueDate</td>
                                                    <td>@Math.Ceiling((decimal)ah.BorrowDate.Value.AddDays((double)@ah.B.TitleNavigation.ReturnTypeNavigation.NoOfDay).Subtract(DateTime.Now).TotalDays)</td>
                                                    <td>
                                                        <input type="checkbox" name="returned" value="@ah.B.Id" />
                                                    </td>
                                                </tr>

                                            }
                                            i++;
                                        }
                                    </tbody>
                                </table>
                                <input type="hidden" name="MID" value="@acc.Id" />
                                <input type="hidden" name="lsv" value="@lastSearchValue" />


                            }
                            else
                            {
                                <div class="alert alert-info alert-dismissible fade in" style="color: #2a2a2a;">
                                    <strong>This user is not borrowing any book</strong>
                                </div>
                            }
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
    </div>
    @*@if (expiredBook != 0 && list.Count != 0)
    {
        <div class="alert alert-danger alert-dismissible fade in" style="color: #2a2a2a;">
            <strong>This member has to pay at least @fineAmountHasToPay.ToString("C") (@expiredBook expired books)</strong>
        </div>
    }
    @if (warningBook != 0 && list.Count != 0)
    {
        <div class="alert alert-warning alert-dismissible fade in" style="color: #2a2a2a;">
            <strong>This member has @warningBook books that is almost due</strong>
        </div>
    }
    @if (warningBook == 0 && expiredBook == 0 && list.Count != 0)
    {
        <div class="alert alert-success alert-dismissible fade in" style="color: #2a2a2a;">
            <strong>This member is clean</strong>
        </div>
    }*@
</div>


<!-- /page content -->


